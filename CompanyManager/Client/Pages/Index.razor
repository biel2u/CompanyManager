@inject IDialogService DialogService
@page "/"

<PageTitle>Kalendarz</PageTitle>

<div class="calendar-control-panel">
    <div class="calendar-controls">
        <MudDatePicker PickerVariant="PickerVariant.Static" Date="@_dateTimeSelected" DateChanged="OnDateChange" />
        <MudButton Variant="Variant.Outlined" Color="Color.Primary" Size="Size.Large" @onclick="OpenDialog">Dodaj +</MudButton>
    </div>
    <div class="calendar-wrapper">
        <CalendarComponent @ref="_calendarComponent" />
    </div>
</div>

@code {
    private CalendarComponent _calendarComponent = null!;
    private DateTime _dateTimeSelected = DateTime.Today;

    private async Task OnDateChange(DateTime? newDateTime)
    {
        _dateTimeSelected = newDateTime != null ? newDateTime.Value : _dateTimeSelected;
        await _calendarComponent.SetCalendarForSelectedDate(_dateTimeSelected);
    }

    private async Task OpenDialog()
    {
        var options = new DialogOptions { CloseOnEscapeKey = true, MaxWidth = MaxWidth.Large, FullWidth = true };
        var parameters = new DialogParameters();
        parameters.Add("SelectedDate", _dateTimeSelected);

        var dialog = DialogService.Show<EditAppointmentModal>("Dodaj wizyte", parameters, options);
        var result = await dialog.Result;

        if (result.Cancelled == false)
        {
            await _calendarComponent.RefreshCalendar();
        }
    }
}